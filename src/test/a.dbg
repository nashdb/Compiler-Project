mc: 19:55 4.19.2017. Compiling test/a.mc in debug mode.

The input program is:

int main(int a)
{
  int b;
  b = +(2, *(a, 8));
  return
    b
}

Type Environment is:
% : int * int -> int
* : int * int -> int
** : int * int -> int
+ : int * int -> int
- : int * int -> int
/ : int * int -> int
< : int * int -> bool
<= : int * int -> bool
<> : int * int -> bool
== : int * int -> bool
> : int * int -> bool
>= : int * int -> bool
main : int -> int
not : bool -> bool

The program is well-typed.


After the naming phase:

int main(int a)
{
  int b;
  b =   let 
      x0 : int =
        let 
            x3 : int = 8
            x4 : int = a
            x5 : int = *(x4, x3)
        in
          x5
      x1 : int = 2
      x2 : int = +(x1, x0)
  in
    x2
  ;
  return
    b
}

After the lifting phase:

int main(int a)
{
  int b;
  b =   let 
      x3 : int = 8
      x4 : int = a
      x5 : int = *(x4, x3)
      x0 : int = x5
      x1 : int = 2
      x2 : int = +(x1, x0)
  in
    x2
  ;
  return
    b
}

After the copyprop phase:

int main(int a)
{
  int b;
  b =   let 
      x3 : int = 8
      x4 : int = a
      x5 : int = *(x4, x3)
      x0 : int = x5
      x1 : int = 2
      x2 : int = +(x1, x0)
  in
    x2
  ;
  return
    b
}

After the control phase:

main:	(a)
	nop
	nop
	b = 0
	return b
	return 0

Emitting MIPS assembley code to test/a.asm


